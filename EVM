#INSTALL
wget https://github.com/EVidenceModeler/EVidenceModeler/releases/download/EVidenceModeler-v2.0.0/EVidenceModeler-v2.0.0.tar.gz
tar -xzf EVidenceModeler-v2.0.0.tar.gz
cd EVidenceModeler-v2.0.0/
./make_simg.sh
docker build -t evidencemodeler:latest .
singularity build EVidenceModeler.sif docker-daemon://evidencemodeler:latest
docker save -o evidencemodeler_latest.tar evidencemodeler:latest
apptainer build EVidenceModeler.sif docker-archive://evidencemodeler_latest.tar
__________________________________________________________________________________

#!/bin/sh

set -ex

# Caminho para a imagem Singularity
SINGULARITY_IMAGE=../Docker/EVidenceModeler.sif

# Executar o EVidenceModeler dentro do contÃªiner Singularity
singularity exec ${SINGULARITY_IMAGE} EVidenceModeler --sample_id smalltest.singularity \
                   --genome genome.fasta \
                   --weights ./weights.txt \
                   --gene_predictions gene_predictions.gff3 \
                   --protein_alignments protein_alignments.gff3 \
                   --transcript_alignments transcript_alignments.gff3 \
                   --segmentSize 100000 \
                   --overlapSize 10000

echo "Done. See smalltest.singularity.EVM.* outputs"










____________________________________________________
#PREPARE FILES  
Step 1: Prepare Input Files
1. Genome Sequence File (FASTA format) masked
2. Gene Prediction Files (GFF3 format)
3. Protein Homology Evidence (GFF3 format)
4. Transcript Evidence (GFF3 format)
Check the Format of the Files

conda install -c bioconda agat
agat_convert_sp_gxf2gxf.pl --gff output.gff3 -o validated_output.gff3

__________________________________________________________________
#RUN
perl $EVM_HOME/EvmUtils/write_EVM_commands.pl \
--genome ~/Documents/alunos/driii/dataUNICAMP/ISCPUB_v0.2.h1_scaffolds.yahs_final_mod.fa.masked \
--weights weights.txt \
--gene_predictions predictions/*.gff3 \
--protein_alignments protein_homology/*.gff3 \
--transcript_alignments transcript_evidence/*.gff3 \
--output_file_name evm.out

perl $EVM_HOME/EvmUtils/execute_EVM_commands.pl EVM_commands.list

