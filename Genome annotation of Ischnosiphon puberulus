Genome annotation of Ischnosiphon puberulus
Orientação e códigos : Diego Riaño-Pachón
Orientação e dados : Clarisse Palma

Gene prediction with extrinsic evidence
We use two pipelines to predict gene models exploiting extrinsic evidence, BRAKER which can use Protein, RNASeq or both kinds of dataset as extrinsic evidence, and GALBA which only uses proteins as extrinsic evidence.
N      	           Evidence	                                            BRAKER	                  GALBA
1	Protein Sequences Viridiplantae from OrthoDB v10	                      X                        	X
2	RNASeq (41 individuals: Igapó and Terra firme)	                        X	
3	Protein Sequences order zimbi from NCBI		                                                        X
4	Proteins Viridiplantae and RNASeq	                                      X	

BRAKER was run in three different ways, with only evidence 1, only evidence 2 and with both evidences 1 and 2. 
GALBA was run two times, onece with evidence 1 and once with evidence 2.
We run annotation on the collapsed version of the genome and also on hap.

###################################################################################################################################################################################
 ssh -p 1000 drielli.canal@bioinfo.cena.usp.br

nano script_Braker.sh
chmod u+x hello.sh
¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨
nano submitHisatDTA_hap1.sh

#!/bin/bash

#PBS -q par128
#PBS -l nodes=1:ppn=128
#PBS -m abe

CPUS=128
cd $/Storage/data1/drielli.canal 

module load hisat/2.2.1 samtools/1.17
mkdir -p RNASeqmapping/
cd RNASeqmapping/
hisat2-build --large-index -p $CPUS --seed 12345 ../../yahs.PITALB_v0.2.col_scaffolds_final.fa.masked yahs.PITALB_v0.2.col_scaffolds_final.masked

hisat2 --dta -x yahs.PITALB_v0.2.col_scaffolds_final.masked -1 ../../RNA-seq_albiflos/Subsample/CHA742B_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA744_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA745A_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA747_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA749B_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO670_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO674A_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO675_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO677_RNA_1.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO678_RNA_1.fastq.gz -2 ../../RNA-seq_albiflos/Subsample/CHA742B_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA744_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA745A_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA747_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/CHA749B_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO670_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO674A_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO675_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO677_RNA_2.fastq.gz,../../RNA-seq_albiflos/Subsample/PBO678_RNA_2.fastq.gz --rna-strandness RF --time --no-unal --threads $CPUS --seed 12345 | samtools view -Sbh > hisat2_output_coll.bam

samtools sort -o hisat2_output_coll.sorted.bam --threads $CPUS hisat2_output_coll.bam
samtools index hisat2_output_coll.sorted.bam


¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨
#!/bin/bash

#$ -q all.q
#$ -V
#$ -cwd

#PBS -q par128
#PBS -l nodes=1:ppn=128
#PBS -m abe

module load singularity-ce/3.11.2

cd $PBS_O_WORKDIR

export BRAKER_SIF=/home/lovelace/proj/proj832/diriano/Projects/Sugarcane/Assemblies/B4/BRAKER3/braker3.sif

#BRAKER only RNASeq
singularity exec -B ${PWD}:${PWD} ${BRAKER_SIF} braker.pl --species "Pitcairnia albiflos hap1 2" --genome=yahs.PITALB_v0.2.hap1_scaffolds_final_mod.fa.masked --bam=RNASeqmapping/hisat2_output_hap1.sorted.bam --softmasking --workingdir=PITALB_v0.2.hap1_scaffolds_final_mod.masked.braker3.feb2024.onlyRNASeq --threads 128
docker1 run --rm -v /workdir/$USER/project2:/data  biohpc/braker2 sh -c ". /root/source.sh; braker.pl --species=mysp --genome=genome.fa.masked --bam=RNA.sorted.bam --softmasking --gff3 --cores=20"

#singularity exec -B ${PWD}:${PWD} ${BRAKER_SIF} braker.pl --species "Saccharum SP80-3280" --genome=B2.asm.hic.p_utg_mask.soft.fasta --prot_seq=external_prots.fasta --bam=hisat2_output.sorted.bam --softmasking --workingdir=braker3.junhe23 --threads 16
#BRAKER RNASeq e Prots
#singularity exec -B ${PWD}:${PWD} ${BRAKER_SIF} braker.pl --species "Pitcairnia albiflos hap1" --genome=yahs.PITALB_v0.2.hap1_scaffolds_final_mod.fa.masked --prot_seq=Viridiplantae.fa --bam=RNASeqmapping/hisat2_output_hap1.sorted.bam --softmasking --workingdir=PITALB_v0.2.hap1_scaffolds_final_mod.masked.braker3.feb2024.RNASeqProtsViridiplantaeOrthoDB --threads 128
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
#BRAKER only Prots
singularity exec -B ${PWD}:${PWD} ${BRAKER_SIF} braker.pl --species "Pitcairnia albiflos hap1 3" --genome=yahs.PITALB_v0.2.hap1_scaffolds_final_mod.fa.masked --prot_seq=Viridiplantae.fa --softmasking --workingdir=PITALB_v0.2.hap1_scaffolds_final_mod.masked.braker3.feb2024.onlyProtsViridiplantaeOrthoDB --threads 128

&&&&&&&submitHisatDTA_hap3.sh&&&&&&&&&
braker.pl --species "Ischnosiphon" --genome $PREFIX --prot_seq $prot --softmasking

&&&&&&submitHisatDTA_hap7.sh&&&&&&&&&&
#!/bin/bash
#$ -q all.q
#$ -cwd
#$ -V

PREFIX=/Storage/data1/drielli.canal/ISCPUB_v0.2.h1_scaffolds.yahs_final_mod.fa.masked
prot=/Storage/data1/drielli.canal/Zingiberales_FINAL_FINAL_FINAL.fasta

module load BRAKER/2.1.6

braker.pl --species "Ischnosiphon" --genome $PREFIX --prot_seq $prot --prg=exonerate  \ --trainFromGth --softmasking
_____________________________________________________________________________________________________________________________
braker.pl: Este é o comando principal para executar o BRAKER2. O .pl no final do comando sugere que é um script Perl. Este comando inicia o processo de predição de genes e anotação do genoma.

--species "Ischnosiphon": Aqui você especifica a espécie para a qual você está realizando a predição de genes. Substitua "Ischnosiphon" pelo nome da espécie que você está trabalhando.

--genome $PREFIX: Aqui você especifica o caminho para o arquivo do genoma que você deseja anotar. Substitua $PREFIX pelo caminho real para o arquivo do genoma.

--prot_seq $prot: Este parâmetro especifica o caminho para o arquivo de sequências de proteínas. Essas proteínas podem ser sequências homólogas de outras espécies relacionadas. Substitua $prot pelo caminho real para o arquivo de sequências de proteínas.

--prg=exonerate: Este parâmetro especifica o programa a ser usado para alinhar as sequências de proteínas ao genoma. Neste caso, está usando o Exonerate. O Exonerate é um programa de alinhamento de sequências que é frequentemente usado em bioinformática.

--trainFromGth: Este parâmetro instrui o BRAKER2 a treinar o GeneMark-ET usando os alinhamentos obtidos pelo Gth (Genome Threader), que é um programa usado para alinhar sequências de proteínas ao genoma.

--softmasking: Este parâmetro indica que o genoma está softmasked, o que significa que as regiões repetitivas foram mascaradas em minúsculas. Isso ajuda a evitar a predição incorreta de genes em regiões repetitivas.

Certifique-se de substituir as variáveis como $PREFIX e $prot pelos caminhos reais e executar esses comandos em um ambiente adequado para o BRAKER2.


